{"version":3,"file":"index.browser.min.js","sources":["../src/index.ts"],"sourcesContent":["import { JsPsych, JsPsychPlugin, ParameterType, TrialType } from \"jspsych\";\n\nconst info = <const>{\n  name: \"fullscreen\",\n  parameters: {\n    /** If true, experiment will enter fullscreen mode. If false, the browser will exit fullscreen mode. */\n    fullscreen_mode: {\n      type: ParameterType.BOOL,\n      pretty_name: \"Fullscreen mode\",\n      default: true,\n      array: false,\n    },\n    /** HTML content to display above the button to enter fullscreen mode */\n    message: {\n      type: ParameterType.HTML_STRING,\n      pretty_name: \"Message\",\n      default:\n        \"<p>The experiment will switch to full screen mode when you press the button below</p>\",\n      array: false,\n    },\n    /** The text that appears on the button to enter fullscreen */\n    button_label: {\n      type: ParameterType.STRING,\n      pretty_name: \"Button label\",\n      default: \"Continue\",\n      array: false,\n    },\n    /** The length of time to delay after entering fullscreen mode before ending the trial. */\n    delay_after: {\n      type: ParameterType.INT,\n      pretty_name: \"Delay after\",\n      default: 1000,\n      array: false,\n    },\n  },\n};\n\ntype Info = typeof info;\n\n/**\n * **fullscreen**\n *\n * jsPsych plugin for toggling fullscreen mode in the browser\n *\n * @author Josh de Leeuw\n * @see {@link https://www.jspsych.org/plugins/jspsych-fullscreen/ fullscreen plugin documentation on jspsych.org}\n */\nclass FullscreenPlugin implements JsPsychPlugin<Info> {\n  static info = info;\n  private rt = null;\n  private start_time = 0;\n\n  constructor(private jsPsych: JsPsych) {}\n\n  trial(display_element: HTMLElement, trial: TrialType<Info>) {\n    // check if keys are allowed in fullscreen mode\n    var keyboardNotAllowed = typeof Element !== \"undefined\" && \"ALLOW_KEYBOARD_INPUT\" in Element;\n    if (keyboardNotAllowed) {\n      // This is Safari, and keyboard events will be disabled. Don't allow fullscreen here.\n      // do something else?\n      this.endTrial(display_element, false, trial);\n    } else {\n      if (trial.fullscreen_mode) {\n        this.showDisplay(display_element, trial);\n      } else {\n        this.exitFullScreen();\n        this.endTrial(display_element, true, trial);\n      }\n    }\n  }\n\n  private showDisplay(display_element, trial) {\n    display_element.innerHTML = `\n      ${trial.message}\n      <button id=\"jspsych-fullscreen-btn\" class=\"jspsych-btn\">${trial.button_label}</button>\n    `;\n    display_element.querySelector(\"#jspsych-fullscreen-btn\").addEventListener(\"click\", () => {\n      this.rt = Math.round(performance.now() - this.start_time);\n      this.enterFullScreen();\n      this.endTrial(display_element, true, trial);\n    });\n    this.start_time = performance.now();\n  }\n\n  private endTrial(display_element, success, trial) {\n    display_element.innerHTML = \"\";\n\n    this.jsPsych.pluginAPI.setTimeout(() => {\n      var trial_data = {\n        success: success,\n        rt: this.rt,\n      };\n\n      this.jsPsych.finishTrial(trial_data);\n    }, trial.delay_after);\n  }\n\n  private enterFullScreen() {\n    var element = document.documentElement;\n    if (element.requestFullscreen) {\n      element.requestFullscreen();\n    } else if (element[\"mozRequestFullScreen\"]) {\n      element[\"mozRequestFullScreen\"]();\n    } else if (element[\"webkitRequestFullscreen\"]) {\n      element[\"webkitRequestFullscreen\"]();\n    } else if (element[\"msRequestFullscreen\"]) {\n      element[\"msRequestFullscreen\"]();\n    }\n  }\n\n  private exitFullScreen() {\n    if (\n      document.fullscreenElement ||\n      document[\"mozFullScreenElement\"] ||\n      document[\"webkitFullscreenElement\"]\n    ) {\n      if (document.exitFullscreen) {\n        document.exitFullscreen();\n      } else if (document[\"msExitFullscreen\"]) {\n        document[\"msExitFullscreen\"]();\n      } else if (document[\"mozCancelFullScreen\"]) {\n        document[\"mozCancelFullScreen\"]();\n      } else if (document[\"webkitExitFullscreen\"]) {\n        document[\"webkitExitFullscreen\"]();\n      }\n    }\n  }\n\n  simulate(\n    trial: TrialType<Info>,\n    simulation_mode,\n    simulation_options: any,\n    load_callback: () => void\n  ) {\n    if (simulation_mode == \"data-only\") {\n      load_callback();\n      this.simulate_data_only(trial, simulation_options);\n    }\n    if (simulation_mode == \"visual\") {\n      this.simulate_visual(trial, simulation_options, load_callback);\n    }\n  }\n\n  private create_simulation_data(trial: TrialType<Info>, simulation_options) {\n    const rt = this.jsPsych.randomization.sampleExGaussian(1000, 100, 1 / 200, true);\n\n    const default_data = {\n      success: true,\n      rt: rt,\n    };\n\n    const data = this.jsPsych.pluginAPI.mergeSimulationData(default_data, simulation_options);\n\n    return data;\n  }\n\n  private simulate_data_only(trial: TrialType<Info>, simulation_options) {\n    const data = this.create_simulation_data(trial, simulation_options);\n\n    this.jsPsych.finishTrial(data);\n  }\n\n  private simulate_visual(trial: TrialType<Info>, simulation_options, load_callback: () => void) {\n    const data = this.create_simulation_data(trial, simulation_options);\n\n    const display_element = this.jsPsych.getDisplayElement();\n\n    if (data.success === false) {\n      this.endTrial(display_element, false, trial);\n    } else {\n      this.trial(display_element, trial);\n      load_callback();\n      this.jsPsych.pluginAPI.clickTarget(\n        display_element.querySelector(\"#jspsych-fullscreen-btn\"),\n        data.rt\n      );\n    }\n  }\n}\n\nexport default FullscreenPlugin;\n"],"names":["info","name","parameters","fullscreen_mode","type","ParameterType","BOOL","pretty_name","default","array","message","HTML_STRING","button_label","STRING","delay_after","INT","FullscreenPlugin","jsPsych","_classCallCheck","this","rt","start_time","key","value","display_element","trial","Element","endTrial","showDisplay","exitFullScreen","_this","innerHTML","concat","querySelector","addEventListener","Math","round","performance","now","enterFullScreen","success","_this2","pluginAPI","setTimeout","trial_data","finishTrial","element","document","documentElement","requestFullscreen","fullscreenElement","exitFullscreen","simulation_mode","simulation_options","load_callback","simulate_data_only","simulate_visual","default_data","randomization","sampleExGaussian","mergeSimulationData","data","create_simulation_data","getDisplayElement","clickTarget"],"mappings":"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"}