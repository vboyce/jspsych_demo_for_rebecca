import { JsPsych, JsPsychPlugin, ParameterType, TrialType } from "jspsych";
declare const info: {
    readonly name: "call-function";
    readonly parameters: {
        /** Function to call */
        readonly func: {
            readonly type: ParameterType.FUNCTION;
            readonly pretty_name: "Function";
            readonly default: any;
        };
        /** Is the function call asynchronous? */
        readonly async: {
            readonly type: ParameterType.BOOL;
            readonly pretty_name: "Asynchronous";
            readonly default: false;
        };
    };
};
type Info = typeof info;
/**
 * **call-function**
 *
 * jsPsych plugin for calling an arbitrary function during a jsPsych experiment
 *
 * @author Josh de Leeuw
 * @see {@link https://www.jspsych.org/plugins/jspsych-call-function/ call-function plugin documentation on jspsych.org}
 */
declare class CallFunctionPlugin implements JsPsychPlugin<Info> {
    private jsPsych;
    static info: {
        readonly name: "call-function";
        readonly parameters: {
            /** Function to call */
            readonly func: {
                readonly type: ParameterType.FUNCTION;
                readonly pretty_name: "Function";
                readonly default: any;
            };
            /** Is the function call asynchronous? */
            readonly async: {
                readonly type: ParameterType.BOOL;
                readonly pretty_name: "Asynchronous";
                readonly default: false;
            };
        };
    };
    constructor(jsPsych: JsPsych);
    trial(display_element: HTMLElement, trial: TrialType<Info>): void;
}
export default CallFunctionPlugin;
